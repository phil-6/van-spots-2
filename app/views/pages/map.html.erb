<div id="map" class="map"></div>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>

<!-- Plugin JavaScript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js"></script>

<!-- Marker Clusterer -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        var map;
        var markers = [];
        var markerCluster;
        var userPos;
        var infoWindow;

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: 51.600000, lng: -4.150000},
                zoom: 12,
                mapTypeControl: true,
                mapTypeControlOptions: {
                    position: google.maps.ControlPosition.LEFT_BOTTOM
                },
                streetViewControl: false,
                fullscreenControl: false,
                scaleControl: true,
                mapTypeId: 'terrain',
            });

            var iconBase = '/assets/map-marker-';
            var icons = {
                'free_spot': { icon: iconBase + 'purple.png' },
                'mtb_spot': { icon: iconBase + 'darker-green.png' },
                'kayaking_spot': { icon: iconBase + 'darker-blue.png' },
                'surf_spot': { icon: iconBase + 'sky-blue.png' },
                'bad_spot': { icon: iconBase + 'red.png' },
                'user': { icon: iconBase + 'ink.png' },
                'new': { icon: iconBase + 'lighter-ink.png' }
            };

            var apiUrl = '/api/spots';
            fetch(apiUrl)
              .then(response => response.json())
              .then(data => {
                  data.forEach(item => {
                      var position = new google.maps.LatLng(item.latitude, item.longitude);
                      var marker = new google.maps.Marker({
                          map: map,
                          position: position,
                          id: item.id,
                          name: item.name,
                          description: item.description,
                          average_rating: item.average_rating,
                          type: item.spot_type,
                          icon: icons[item.spot_type].icon,
                          animation: google.maps.Animation.DROP
                      });

                      markers.push(marker);
                      marker.addListener('click', function () {
                          populateInfoWindow(this, infoWindow);
                      });
                  });

                  markerCluster = new MarkerClusterer({ map, markers });
              });

            var mapFilterControlsDiv = document.createElement('div');
            var mapFilterControls = new MapFilterControls(mapFilterControlsDiv, map);
            mapFilterControlsDiv.index = 1;
            map.controls[google.maps.ControlPosition.LEFT_CENTER].push(mapFilterControlsDiv);

            var userInfoWindow = new google.maps.InfoWindow({map: map});
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    userPos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var userMarker = new google.maps.Marker({
                        position: userPos,
                        animation: google.maps.Animation.DROP,
                        icon: icons['user'].icon,
                        map: map
                    });
                    userInfoWindow.setContent('<div class="text-center"><strong>You are here.</strong><br />' + userPos.lat + ', ' + userPos.lng + '</div>');
                    userMarker.addListener('click', function(){
                        userInfoWindow.open(map, userMarker);
                    });
                    map.setCenter(userPos);
                }, function() {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                handleLocationError(false, infoWindow, map.getCenter());
            }

            var newMarkerInfoWindow = new google.maps.InfoWindow({map: map});
            var newMarker;

            function placeNewMarker(location){
                if (newMarker) {
                    newMarker.setPosition(location);
                } else {
                    newMarker = new google.maps.Marker({
                        position: location,
                        icon: icons['new'].icon,
                        map: map
                    });
                }
                var newMarkerInfoWindowContent = '<div id="content">' +
                  '<a href="/spots/new?latitude=' + location.lat() +
                  '&longitude=' + location.lng() + '"><strong> Add Spot Here </strong></a>' +
                  '<br />Lat: ' + location.lat() + ', ' +
                  '<br />Lng: ' + location.lng() + '</div>';
                newMarkerInfoWindow.setContent(newMarkerInfoWindowContent);
                newMarkerInfoWindow.open(map, newMarker);
                newMarker.addListener('click', function(){
                    newMarkerInfoWindow.open(map, newMarker);
                });
            }

            google.maps.event.addListener(map, "click", function(event) {
                placeNewMarker(event.latLng);
            });
        }

        function handleLocationError(browserHasGeolocation, infoWindow, userPos) {
            infoWindow.setPosition(userPos);
            infoWindow.setContent(browserHasGeolocation ?
              'Error: The Geolocation service failed.' :
              'Error: Your browser doesn\'t support geolocation.');
        }

        function populateInfoWindow(marker, infowindow) {
            if (infowindow.marker !== marker) {
                var marker_type;
                if (marker.type === 'free_spot') {
                    marker_type = 'Free Spot';
                } else if (marker.type === 'paid_spot') {
                    marker_type = 'Paid Spot';
                } else if (marker.type === 'campsite') {
                    marker_type = 'Campsite';
                } else if (marker.type === 'mtb_spot') {
                    marker_type = 'MTB Spot';
                } else if (marker.type === 'climbing_spot') {
                    marker_type = 'Climbing Spot';
                } else if (marker.type === 'kayaking_spot') {
                    marker_type = 'Kayaking Spot';
                } else if (marker.type === 'surf_spot') {
                    marker_type = 'Surf Spot';
                } else if (marker.type === 'bad_spot') {
                    marker_type = 'Bad Spot';
                } else {
                    marker_type = 'Unknown Spot Type';
                }
                var infoWindowContent = '<div id="content">' +
                  '<h2 id="infoWindowHeading" class="infoWindowHeading">' +
                  '<a href="/spots/' + marker.id + '">' + marker.name + '</a></h2>' +
                  '<div id="infoWindowContent" class="infoWindowContent">' +
                  '<h6>' + marker_type + ' - ' + marker.average_rating + '/10</h6>' +
                  '<p>' + marker.description + '</p>' +
                  '<p><a class="btn btn-sm btn-secondary" href="https://www.google.com/maps/dir/?api=1&destination='
                  + marker.position.lat() + ','
                  + marker.position.lng() +
                  '">Directions</a>' + '    ' +
                  '<a  class="btn btn-sm btn-info" href="/spots/' + marker.id + '">More Info</a>' +
                  ' </p>' +
                  '</div>' +
                  '</div>';
                infowindow.marker = marker;
                infowindow.setContent(infoWindowContent);
                infowindow.open(map, marker);
                infowindow.addListener('closeclick', function () {
                    infowindow.marker = null;
                });
            }
        }

        function showListings() {
            var bounds = new google.maps.LatLngBounds();
            markers.forEach(marker => {
                marker.setMap(map);
                markerCluster.addMarker(marker);
                bounds.extend(marker.position);
            });
            map.fitBounds(bounds);
            markerCluster.repaint();
        }

        function hideListings() {
            markers.forEach(marker => {
                marker.setMap(null);
                markerCluster.removeMarker(marker);
            });
        }

        function MapFilterControls(controlDiv, map) {
            var showAllUI = document.createElement('div');
            showAllUI.id = 'showAllUI';
            showAllUI.title = 'Show all listings';
            controlDiv.appendChild(showAllUI);

            var showAllText = document.createElement('div');
            showAllText.id = 'showAllText';
            showAllText.innerHTML = 'Show All';
            showAllUI.appendChild(showAllText);

            var hideAllUI = document.createElement('div');
            hideAllUI.id = 'hideAllUI';
            hideAllUI.title = 'Hide all listings';
            controlDiv.appendChild(hideAllUI);

            var hideAllText = document.createElement('div');
            hideAllText.id = 'hideAllText';
            hideAllText.innerHTML = 'Hide All';
            hideAllUI.appendChild(hideAllText);

            showAllUI.addEventListener('click', showListings);
            hideAllUI.addEventListener('click', hideListings);
        }

        var controlDiv = document.querySelector(".controlDiv");
        if (controlDiv) {
            controlDiv.addEventListener('click', function (e) {
                if (e.target.tagName === 'DIV') {
                    var active = e.target.parentElement.querySelector('div.active');
                    if (active) active.classList.remove('active');
                    e.target.classList.add('active');
                }
            });
        }
    });

    function initMap() {
        // Initialize the map
    }
</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['MAPS_API_KEY'] %>&callback=initMap">
</script>
